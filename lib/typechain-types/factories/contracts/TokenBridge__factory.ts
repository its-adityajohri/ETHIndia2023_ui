/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TokenBridge,
  TokenBridgeInterface,
} from "../../contracts/TokenBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Inbox",
        name: "_inbox",
        type: "address",
      },
      {
        internalType: "contract Outbox",
        name: "_outbox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "bridgeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "crossTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "inbox",
    outputs: [
      {
        internalType: "contract Inbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outbox",
    outputs: [
      {
        internalType: "contract Outbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "messageId",
        type: "uint256",
      },
    ],
    name: "releaseToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "sourceTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "targetTokenAddress",
        type: "address",
      },
    ],
    name: "setCrossTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161093538038061093583398101604081905261002f91610078565b600180546001600160a01b039384166001600160a01b031991821617909155600080549290931691161790556100b2565b6001600160a01b038116811461007557600080fd5b50565b6000806040838503121561008b57600080fd5b825161009681610060565b60208401519092506100a781610060565b809150509250929050565b610874806100c16000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063075b2c0c146100675780631909e8061461007c5780634e8304441461008f578063ae02880a146100a2578063ce11e6ab146100f2578063fb0e722b14610105575b600080fd5b61007a6100753660046104eb565b610118565b005b61007a61008a366004610525565b6102a2565b61007a61009d36600461056d565b610448565b6100d66100b03660046105af565b60026020908152600092835260408084209091529082529020546001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6000546100d6906001600160a01b031681565b6001546100d6906001600160a01b031681565b60015460405163da0632ad60e01b815260048101849052602481018390526000916001600160a01b03169063da0632ad90604401600060405180830381865afa158015610169573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101919190810190610688565b9050600080600083608001518060200190518101906101b09190610790565b919450925090506001600160a01b03821633146102265760405162461bcd60e51b815260206004820152602960248201527f596f7520617265206e6f742074686520726563697069656e74206f6620746865604482015268736520746f6b656e7360b81b60648201526084015b60405180910390fd5b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610275573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029991906107d3565b50505050505050565b60008481526002602090815260408083206001600160a01b038781168552925290912054166103135760405162461bcd60e51b815260206004820152601e60248201527f496e76616c696420746f6b656e20666f722074617267657420636861696e0000604482015260640161021d565b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038416906323b872dd906064016020604051808303816000875af1158015610366573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038a91906107d3565b5060008481526002602090815260408083206001600160a01b038781168552908352818420548251908216938101939093528516908201526060810183905260800160408051601f1981840301815290829052600054634f9e72ad60e11b83529092506001600160a01b031690639f3ce55a9061040f908690899086906004016107f5565b600060405180830381600087803b15801561042957600080fd5b505af115801561043d573d6000803e3d6000fd5b505050505050505050565b60008381526002602090815260408083206001600160a01b03868116855292529091205416156104b05760405162461bcd60e51b81526020600482015260136024820152721059191c995cdcc8185b1c9958591e481cd95d606a1b604482015260640161021d565b60009283526002602090815260408085206001600160a01b0394851686529091529092208054919092166001600160a01b0319909116179055565b600080604083850312156104fe57600080fd5b50508035926020909101359150565b6001600160a01b038116811461052257600080fd5b50565b6000806000806080858703121561053b57600080fd5b84359350602085013561054d8161050d565b9250604085013561055d8161050d565b9396929550929360600135925050565b60008060006060848603121561058257600080fd5b8335925060208401356105948161050d565b915060408401356105a48161050d565b809150509250925092565b600080604083850312156105c257600080fd5b8235915060208301356105d48161050d565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715610618576106186105df565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610647576106476105df565b604052919050565b60005b8381101561066a578181015183820152602001610652565b50506000910152565b8051801515811461068357600080fd5b919050565b6000602080838503121561069b57600080fd5b825167ffffffffffffffff808211156106b357600080fd5b9084019060c082870312156106c757600080fd5b6106cf6105f5565b82518152838301518482015260408301516106e98161050d565b604082015260608301516106fc8161050d565b606082015260808301518281111561071357600080fd5b8301601f8101881361072457600080fd5b805183811115610736576107366105df565b610748601f8201601f1916870161061e565b9350808452888682840101111561075e57600080fd5b61076d8187860188850161064f565b505081608082015261078160a08401610673565b60a08201529695505050505050565b6000806000606084860312156107a557600080fd5b83516107b08161050d565b60208501519093506107c18161050d565b80925050604084015190509250925092565b6000602082840312156107e557600080fd5b6107ee82610673565b9392505050565b60018060a01b0384168152826020820152606060408201526000825180606084015261082881608085016020870161064f565b601f01601f19169190910160800194935050505056fea264697066735822122075080823b81a4a2ab82cd5e62cee4fba3c0cc874f13ef293794963c0164836bc64736f6c63430008130033";

type TokenBridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenBridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenBridge__factory extends ContractFactory {
  constructor(...args: TokenBridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _inbox: AddressLike,
    _outbox: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_inbox, _outbox, overrides || {});
  }
  override deploy(
    _inbox: AddressLike,
    _outbox: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_inbox, _outbox, overrides || {}) as Promise<
      TokenBridge & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenBridge__factory {
    return super.connect(runner) as TokenBridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenBridgeInterface {
    return new Interface(_abi) as TokenBridgeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TokenBridge {
    return new Contract(address, _abi, runner) as unknown as TokenBridge;
  }
}
